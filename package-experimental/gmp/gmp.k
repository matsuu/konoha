class Gmp{}

Gmp!  Gmp.new();
Gmp!  Gmp.init ();
Gmp!  Gmp.init2 (int n);
Gmp!  Gmp.clear ();
Gmp!  Gmp.set (Gmp op);
Gmp!  Gmp.setInt(int op);
Gmp!  Gmp.setFloat(float op);

//Gmp!  Gmp.set_q (Gmp rop, mpq_t op);
//Gmp!  Gmp.set_f (Gmp rop, mpf_t op);
int    Gmp.setStr (Gmp rop, String str, int base);
Gmp!   Gmp.swap (Gmp rop1, Gmp rop2);
Gmp!   Gmp.initSet (Gmp op);
Gmp!   Gmp.initSetInt (int op);
Gmp!   Gmp.initSetDouble (float op);
int    Gmp.initSetStr (String str, int base);
int    Gmp.getInt ();
float  Gmp.getFloat ();
float  Gmp.getFloat2exp (int exp);
String Gmp.getString (int base);
Gmp!   Gmp.add (Gmp op);
Gmp!   Gmp.addInt (int op);
Gmp!   Gmp.sub (Gmp op);
Gmp!   Gmp.subInt (int op);
Gmp!   Gmp.iSub (int op1, Gmp op2);
Gmp!   Gmp.mul (Gmp op);
Gmp!   Gmp.mulInt (int op2);
Gmp!   Gmp.addmul (Gmp op1, Gmp op2);
Gmp!   Gmp.addmulInt (Gmp op1, int op2);
Gmp!   Gmp.submul (Gmp op1, Gmp op2);
Gmp!   Gmp.submulInt (Gmp op1, int op2);
Gmp!   Gmp.mul_2exp (Gmp rop, Gmp op1, int op2);
Gmp!   Gmp.neg ();
Gmp!   Gmp.abs ();
Gmp!   Gmp.cdivQ (Gmp n, Gmp d);
Gmp!   Gmp.cdivR (Gmp n, Gmp d);
Gmp!   Gmp.cdivQR (Gmp r, Gmp n, Gmp d);
int    Gmp.cdivQ2 (Gmp n, int d);
int    Gmp.cdivR2 (Gmp n, int d);
int    Gmp.cdivQR (Gmp r, Gmp n, int d);
int    Gmp.cdivInt (int d);
Gmp!   Gmp.cdivQ2exp (Gmp n, int b);
Gmp!   Gmp.cdivR2exp (Gmp n, int b);

Gmp!   Gmp.fdivQ (Gmp n, Gmp d);
Gmp!   Gmp.fdivR (Gmp n, Gmp d);
Gmp!   Gmp.fdivQR (Gmp r, Gmp n, Gmp d);
int    Gmp.fdivQ2 (Gmp n, int d);
int    Gmp.fdivR2 (Gmp n, int d);
int    Gmp.fdivQR2 (Gmp r, Gmp n, int d);
int    Gmp.fdiv2 (int d);
Gmp!   Gmp.fdivQ2exp (Gmp n, int b);
Gmp!   Gmp.fdivR2exp (Gmp n, int b);

Gmp!   Gmp.divQ (Gmp n, Gmp d);
Gmp!   Gmp.divR (Gmp n, Gmp d);
Gmp!   Gmp.divQR (Gmp r, Gmp n, Gmp d);
int    Gmp.tdivQ2 (Gmp n, int d);
int    Gmp.tdivR2 (Gmp n, int d);
int    Gmp.tdivQR2 (Gmp r, Gmp n, int d);
int    Gmp.tdiv2 (int d);
Gmp!   Gmp.divQ2exp (Gmp n, int b);
Gmp!   Gmp.divR2exp (Gmp n, int b);
Gmp!   Gmp.mod  (Gmp r, Gmp n, Gmp d);
int    Gmp.mod2 (Gmp r, Gmp n, int d);
Gmp!   Gmp.divexact  (Gmp n, Gmp d);
Gmp!   Gmp.divexact2 (Gmp n, int d);
int    Gmp.divisible (Gmp d);
int    Gmp.divisible2(int d);
int    Gmp.divisible2exp (int b);
int    Gmp.congruent (Gmp c, Gmp d);
int    Gmp.congruent2(int c, int d);
int    Gmp.congruent2exp (Gmp c, int b);
Gmp!   Gmp.powm  (Gmp base, Gmp exp, Gmp modu);
Gmp!   Gmp.powm2 (Gmp base, int exp, Gmp modu);
Gmp!   Gmp.pow2  (Gmp base, int exp);
Gmp!   Gmp.ipow2 (int base, int exp);
int    Gmp.root  (Gmp op  , int n);
Gmp!   Gmp.rootrem (Gmp root, Gmp rem, Gmp u, int n);
Gmp!   Gmp.sqrt (Gmp op);
Gmp!   Gmp.sqrtrem (Gmp op1, Gmp op2);
int    Gmp.perfectPower  ();
int    Gmp.perfectSquare ();
int    Gmp.probabPrime   (int reps);
Gmp!   Gmp.nextprime (Gmp op);
Gmp!   Gmp.gcd    (Gmp op1, Gmp op2);
int    Gmp.gcd2   (Gmp op1, int op2);
Gmp!   Gmp.gcdext (Gmp s, Gmp t, Gmp a, Gmp b);
Gmp!   Gmp.lcm    (Gmp op1, Gmp op2);
Gmp!   Gmp.lcm2   (Gmp op1, int op2);
int    Gmp.invert (Gmp op1, Gmp op2);
int    Gmp.jacobi (Gmp b);
int    Gmp.legendre   (Gmp p);
int    Gmp.kronecker  (Gmp b);
int    Gmp.kronecker2 (int b);
int    Gmp.intKronecker (int a);
int    Gmp.remove (Gmp op, Gmp f);
Gmp!   Gmp.fac  (Gmp rop, int op);
Gmp!   Gmp.bin  (Gmp n, int k);
Gmp!   Gmp.bin2 (int n, int k);
Gmp!   Gmp.fib2 (Gmp fn, int n);
Gmp!   Gmp.lucnum (int n);
Gmp!   Gmp.lucnum2(Gmp lnsub1, int n);
int    Gmp.cmp   (Gmp op2);
int    Gmp.cmpDouble (float op2);
int    Gmp.cmpInt    (int op2);
int    Gmp.cmpAbs (Gmp op2);
int    Gmp.cmpAbsDouble(float op2);
int    Gmp.cmpAbsInt (int op2);
Gmp!   Gmp.and (Gmp op1, Gmp op2);
Gmp!   Gmp.ior (Gmp op1, Gmp op2);
Gmp!   Gmp.xor (Gmp op1, Gmp op2);
Gmp!   Gmp.com (Gmp op);
int    Gmp.popcount ();
int    Gmp.hamdist (Gmp op2);
int    Gmp.scan0 (int starting_bit);
int    Gmp.scan1 (int starting_bit);
Gmp!  Gmp.setbit (int bit_index);
Gmp!  Gmp.clrbit (int bit_index);
Gmp!  Gmp.combit (int bit_index);
int    Gmp.mpstbit (int bit_index);

//int    Gmp.out_str (OutputStream stream, int base, Gmp op);
//int    Gmp.inp_str (Gmp rop, OutputStream stream, int base);
//int    Gmp.out_raw (OutputStream stream, Gmp op);
//int    Gmp.inp_raw (Gmp rop, OutputStream stream);
//Gmp!  Gmp.urandomb (Gmp rop, gmp_randstate_t state, int n);
//Gmp!  Gmp.urandomm (Gmp rop, gmp_randstate_t state, Gmp n);
//Gmp!  Gmp.rrandomb (Gmp rop, gmp_randstate_t state, int n);
//Gmp!  Gmp.random (Gmp rop, mp_int max_size);
//Gmp!  Gmp.random2 (Gmp rop, mp_int max_size);

int    Gmp.fitsInt();
int    Gmp.odd  ();
int    Gmp.even ();
int    Gmp.sizeinbase (int base);

//int    Gmp.getlimbn (Gmp op, mp_int n);
//int    Gmp.size (Gmp op);

