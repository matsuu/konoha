# Automagically generated file.
# generated by gensrc/gen_tmake.k
# 
# Platform-independent settings for T-Shell environments

DEPS = Dependencies
DEPENDENCIES_OUTPUT := $(DEPS)

VPATH = "./ $(shell find ../../ -type d) ./"

# -I../support/include must precede -I$(BD)/include, so as to avoid
# ../support/include/machine.h be loaded earlier
CFLAGS += -Wall -fmessage-length=0 -I../support/include -I$(BD)/include -I../../include -DKONOHA_ON_TB -DKONOHA_MONOLITHIC

LDLIBS := -ldl $(LDLIBS)

program = konoha
library = lib$(program)

.PHONY: all
all: $(program) $(program).map

libkonoha_la_SOURCES += ../src/main/system.c
libkonoha_la_SOURCES += ../src/main/objectdbms.c
libkonoha_la_SOURCES += ../src/main/typesystem.c
libkonoha_la_SOURCES += ../src/main/memory.c
libkonoha_la_SOURCES += ../src/main/konoha_api.c
libkonoha_la_SOURCES += ../src/main/konoha_ext.c
libkonoha_la_SOURCES += ../src/main/systemtable.c
libkonoha_la_SOURCES += ../src/main/security.c
libkonoha_la_SOURCES += ../src/main/classapi.c
libkonoha_la_SOURCES += ../src/main/glue.c
libkonoha_la_SOURCES += ../src/main/exports.c
libkonoha_la_SOURCES += ../src/main/metadata.c
libkonoha_la_SOURCES += ../src/main/logging.c
libkonoha_la_SOURCES += ../src/main/stack.c
libkonoha_la_SOURCES += ../src/konohadev_main.c
libkonoha_la_SOURCES += ../src/class/knh_Mapper.c
libkonoha_la_SOURCES += ../src/class/knh_Array.c
libkonoha_la_SOURCES += ../src/class/knh_NameSpace.c
libkonoha_la_SOURCES += ../src/class/knh_System.c
libkonoha_la_SOURCES += ../src/class/knh_OutputStream.c
libkonoha_la_SOURCES += ../src/class/knh_Iterator.c
libkonoha_la_SOURCES += ../src/class/knh_Bytes.c
libkonoha_la_SOURCES += ../src/class/knh_write.c
libkonoha_la_SOURCES += ../src/class/knh_Class.c
libkonoha_la_SOURCES += ../src/class/knh_Script.c
libkonoha_la_SOURCES += ../src/class/knh_Object.c
libkonoha_la_SOURCES += ../src/class/knh_String_mbytes.c
libkonoha_la_SOURCES += ../src/class/knh_BytesConv.c
libkonoha_la_SOURCES += ../src/class/knh_Hash.c
libkonoha_la_SOURCES += ../src/class/knh_String.c
libkonoha_la_SOURCES += ../src/class/knh_InputStream.c
libkonoha_la_SOURCES += ../src/class/knh_Closure.c
libkonoha_la_SOURCES += ../src/class/knh_DictMapSet.c
libkonoha_la_SOURCES += ../src/class/knh_ResultSet.c
libkonoha_la_SOURCES += ../src/class/knh_DictIdx.c
libkonoha_la_SOURCES += ../src/class/knh_ClassSpec.c
libkonoha_la_SOURCES += ../src/class/knh_Method.c
libkonoha_la_SOURCES += ../src/class/knh_Connection.c
libkonoha_la_SOURCES += ../src/class/knh_bytes_t.c
libkonoha_la_SOURCES += ../src/class/knh_Exception.c
libkonoha_la_SOURCES += ../src/class/knh_Context.c
libkonoha_la_SOURCES += ../src/class/knh_Number.c
libkonoha_la_SOURCES += ../src/class/knh_type_t.c
libkonoha_la_SOURCES += ../src/ext/mt19937-64.c
libkonoha_la_SOURCES += ../src/ext/strerror.c
libkonoha_la_SOURCES += ../src/ext/qsort.c
libkonoha_la_SOURCES += ../src/ext/mt19937ar.c
libkonoha_la_SOURCES += ../src/api/hashapi.c
libkonoha_la_SOURCES += ../src/api/narutoapi.c
libkonoha_la_SOURCES += ../src/api/stringapi.c
libkonoha_la_SOURCES += ../src/api/systemapi.c
libkonoha_la_SOURCES += ../src/api/arrayapi.c
libkonoha_la_SOURCES += ../src/api/dictapi.c
libkonoha_la_SOURCES += ../src/api/objectapi.c
libkonoha_la_SOURCES += ../src/api/dbapi.c
libkonoha_la_SOURCES += ../src/api/streamapi.c
libkonoha_la_SOURCES += ../src/api/numberapi.c
libkonoha_la_SOURCES += ../src/api/bytesapi.c
libkonoha_la_SOURCES += ../src/api/anyapi.c
libkonoha_la_SOURCES += ../src/compiler/token.c
libkonoha_la_SOURCES += ../src/compiler/perror.c
libkonoha_la_SOURCES += ../src/compiler/parser.c
libkonoha_la_SOURCES += ../src/compiler/asm.c
libkonoha_la_SOURCES += ../src/compiler/kcode.c
libkonoha_la_SOURCES += ../src/compiler/typing.c
libkonoha_la_SOURCES += ../src/compiler/stmt.c
libkonoha_la_SOURCES += ../src/compiler/tokenizer.c
libkonoha_la_SOURCES += ../src/compiler/konohac.c
libkonoha_la_SOURCES += ../src/labs/b4.c
libkonoha_la_SOURCES += ../src/gen/konoha_klr_.c
libkonoha_la_SOURCES += ../src/gen/konohac_.c
libkonoha_la_SOURCES += ../src/gen/method_.c
libkonoha_la_SOURCES += ../src/gen/codetemplate.c
libkonoha_la_SOURCES += ../src/gen/fibo.c
libkonoha_la_SOURCES += ../src/deps/filesystem.c
libkonoha_la_SOURCES += ../src/deps/locale.c
libkonoha_la_SOURCES += ../src/deps/sqlite3.c
libkonoha_la_SOURCES += ../src/deps/socket.c
libkonoha_la_SOURCES += ../src/deps/fileio.c
libkonoha_la_SOURCES += ../src/deps/dlopen.c
libkonoha_la_SOURCES += ../src/deps/regex.c
libkonoha_la_SOURCES += ../src/deps/thread.c
libkonoha_la_SOURCES += ../src/deps/time.c
# 
# added for T-Shell environment
libkonoha_la_SOURCES += ../support/src/getenv.c

konoha_SOURCES = ../src/konoha.c

objs = $(addsuffix .o,$(basename $(notdir $(libkonoha_la_SOURCES) $(konoha_SOURCES))))

$(library).a: $(objs)
	$(AR) $(ARFLAGS) $@ $^

$(program).out: $(library).a konoha.o
	$(LINK.o) -o $@ konoha.o -L. -l$(program) $(LDLIBS) 

$(program).map: $(program).out
	$(NM) $(NMFLAGS) $< > $@

$(program): $(program).out
	$(CP) $< $@
	$(STRIP) $@
	$(ETCBIN)/bzcomp $(BZCOMP_FLAGS) $@

.PHONY: dist
dist:
	$(RM) $(objs) konoha.o

.PHONY: clean
clean:
	$(RM) $(objs) $(program) $(program).out $(program).map $(library).a konoha.o 

ifdef DEPENDENCIES_OUTPUT
  $(DEPS): ; touch $(DEPS)
else
  $(DEPS): $(SRC) ; $(MAKEDEPS) $@ $?
endif
-include $(DEPS)

